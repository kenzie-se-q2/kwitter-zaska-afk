{"version":3,"sources":["fetchRequests.js","store/store.js","components/Login.js","views/Home.js","views/Register.js","views/NotFound.js","components/Header.js","views/Profile.js","components/LikeButton.js","components/MessageItem.js","components/MessageList.js","components/TopTenList.js","views/Messages.js","App.js","index.js"],"names":["baseURL","loginRequest","username","password","fetch","method","headers","body","JSON","stringify","then","res","json","getMessageList","ACTIONS","LOGOUT","LOGIN","SET_MESSAGES","SET_REDIRECTING","ADD_LIKE","REMOVE_LIKE","useStore","create","devtools","redux","state","action","type","user","payload","token","messages","isRedirecting","console","log","likes","like","Login","dispatch","useState","formData","setFormData","useEffect","window","addEventListener","handleMessage","removeEventListener","e","undefined","data","handleChange","inputName","target","name","inputValue","value","id","onSubmit","preventDefault","userData","message","alert","htmlFor","autoFocus","required","onChange","onClick","open","to","Home","props","Register","displayName","NotFound","location","pathname","NavView","Navbar","fixed","bg","variant","Authorization","SET_LIMIT","limit","ImgUpload","src","className","for","Name","minLength","maxLength","Status","Password","Profile","status","canEdit","width","alt","Edit","changeActive","children","handleDelete","ProfilePage","setUser","setUsername","userStatus","setUserStatus","imageUrl","setImageUrl","isActive","setIsActive","setCanEdit","about","currentUser","photoUpload","event","reader","FileReader","picture","files","onloadend","size","result","FormData","append","setPictureRequest","readAsDataURL","handleSubmit","updateUserRequest","statusCode","pictureLocation","deleteUserRequest","changeIsActive","getUserRequest","slice","editName","editPassword","editStatus","LikeButton","buttonName","setButtonName","isFirstRender","setIsFirstRender","filter","Card","Text","length","Button","messageId","addLikeRequest","likeId","removeLikeRequest","setTimeout","MessageItem","profilePicture","setProfilePicture","isUserMessage","setIsUserMessage","blob","pictureURL","URL","createObjectURL","style","height","Img","Body","Title","readOnly","MessageList","sortedMessages","map","text","TopTenList","sort","a","b","Messages","newMessage","setNewMessage","list","match","path","placeholder","App","exact","component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.dc95f31a.chunk.js","sourcesContent":["const baseURL = \"https://socialapp-api.herokuapp.com/\"\r\n\r\nexport const loginRequest = (username, password) => {\r\n  return fetch(baseURL + \"auth/login\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json())\r\n}\r\n\r\nexport const logoutRequest = (token) => {\r\n  return fetch(baseURL + \"auth/logout\", {\r\n    headers: { Authorization: \"Bearer \" + token },\r\n  }).then((res) => res.json())\r\n}\r\n\r\nexport const createUserRequest = (username, password, displayName) => {\r\n  return fetch(baseURL + \"users\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      username,\r\n      displayName,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json())\r\n}\r\n\r\n//to search for another user's profile information\r\nexport const getUserRequest = (username) => {\r\n  return fetch(baseURL + `users/${username}`).then((res) => res.json())\r\n}\r\n\r\n//settings component to update user's information\r\nexport const updateUserRequest = (\r\n  username,\r\n  password,\r\n  about,\r\n  displayName,\r\n  token\r\n) => {\r\n  return fetch(baseURL + `users/${username}`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      password,\r\n      about,\r\n      displayName,\r\n    }),\r\n  }).then((res) => res.json())\r\n}\r\n\r\n//settings component\r\nexport const deleteUserRequest = (username, token) => {\r\n  return fetch(baseURL + `users/${username}`, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: \"Bearer \" + token },\r\n  }).then((res) => res.json())\r\n}\r\n\r\n//looking at another user's profile and in message component\r\nexport const getPictureRequest = (username) => {\r\n  return fetch(baseURL + `users/${username}/picture`).then((res) => res.blob())\r\n}\r\n\r\nexport const setPictureRequest = (username, picture, token) => {\r\n  const formData = new FormData()\r\n  formData.append(\"picture\", picture)\r\n\r\n  return fetch(baseURL + `users/${username}/picture`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: formData,\r\n  })\r\n}\r\n\r\nexport const createMessageRequest = (token, text) => {\r\n  return fetch(baseURL + \"messages\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      text,\r\n    }),\r\n  }).then((res) => res.json())\r\n}\r\n\r\n//looking at another user's profile\r\nexport const getUserMessageList = (limit, offset, username) => {\r\n  return fetch(\r\n    `${baseURL}messages?limit=${limit}&offset=${offset}&username=${username}`\r\n  ).then((res) => res.json())\r\n}\r\n\r\nexport const getMessageList = () => {\r\n  return fetch(`${baseURL}messages?limit=${100}&offset=${0}`).then((res) =>\r\n    res.json()\r\n  )\r\n}\r\n\r\n//can be in settings or for messages you have posted\r\nexport const deleteMessageRequest = (messageId, token) => {\r\n  return fetch(`${baseURL}messages/${messageId}`, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: \"Bearer \" + token },\r\n  }).then((res) => res.json())\r\n}\r\n\r\nexport const addLikeRequest = (messageId, token) => {\r\n  return fetch(baseURL + \"likes\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      messageId,\r\n    }),\r\n  })\r\n}\r\n\r\nexport const removeLikeRequest = (likeId, token) => {\r\n  return fetch(`${baseURL}likes/${likeId}`, {\r\n    method: \"DELETE\",\r\n    headers: { Authorization: \"Bearer \" + token },\r\n  }).then((res) => res.json())\r\n}\r\n","import create from \"zustand\"\r\nimport { devtools, redux } from \"zustand/middleware\"\r\n\r\n// define the store's initial state\r\nconst initialState = {\r\n  user: { token: \"\" },\r\n  messages: [],\r\n  isRedirecting: false,\r\n}\r\n\r\n// set action types\r\nexport const ACTIONS = {\r\n  LOGOUT: \"LOGOUT\",\r\n  LOGIN: \"LOGIN\",\r\n  SET_MESSAGES: \"SET_MESSAGES\",\r\n  SET_REDIRECTING: \"SET_REDIRECTING\",\r\n  ADD_LIKE: \"ADD_LIKE\",\r\n  REMOVE_LIKE: \"REMOVE_LIKE\",\r\n}\r\n\r\n// define reducer function\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.LOGIN:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          username: action.payload.username,\r\n          token: action.payload.token,\r\n        },\r\n      }\r\n    case ACTIONS.LOGOUT:\r\n      return { ...state, user: {} }\r\n    case ACTIONS.SET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: action.payload.messages,\r\n      }\r\n    case ACTIONS.SET_REDIRECTING:\r\n      return { ...state, isRedirecting: !state.isRedirecting }\r\n    case ACTIONS.ADD_LIKE:\r\n      console.log(action.payload)\r\n      return { ...state, likes: [...state.likes, action.payload.like] }\r\n    case ACTIONS.REMOVE_LIKE:\r\n      return { ...state, likes: action.payload.likes }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// create useStore hook\r\nexport const useStore = create(devtools(redux(reducer, initialState)))\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { loginRequest } from \"../fetchRequests\"\r\n\r\nimport { ACTIONS, useStore } from \"../store/store\"\r\nimport \"../assets/homepage.css\"\r\n\r\nfunction Login() {\r\n  const dispatch = useStore((state) => state.dispatch)\r\n  const isRedirecting = useStore((state) => state.isRedirecting)\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"message\", handleMessage)\r\n    return () => {\r\n      window.removeEventListener(\"message\", handleMessage)\r\n    }\r\n  }, [])\r\n\r\n  const handleMessage = (e) => {\r\n    if (e.data.username !== undefined) {\r\n      dispatch({ type: ACTIONS.LOGIN, payload: e.data })\r\n      dispatch({ type: ACTIONS.SET_REDIRECTING })\r\n    }\r\n  }\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    loginRequest(formData.username, formData.password)\r\n      // If the request turned out ok\r\n      .then((userData) => {\r\n        if (userData.message === undefined) {\r\n          return dispatch({ type: ACTIONS.LOGIN, payload: userData })\r\n        } else {\r\n          alert(userData.message)\r\n          return false\r\n        }\r\n      })\r\n      .then((value) => {\r\n        if (value) {\r\n          dispatch({ type: ACTIONS.SET_REDIRECTING })\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const inputName = e.target.name\r\n    const inputValue = e.target.value\r\n    setFormData((state) => ({ ...state, [inputName]: inputValue }))\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    window.open(\"https://socialapp-api.herokuapp.com/auth/google/login\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"login\">\r\n        <form id=\"login-form\" onSubmit={handleLogin}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            autoFocus\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n          <button onClick={handleClick}>Login in with Google</button>\r\n\r\n          <p>\r\n            Don't have an account? Sign up <Link to=\"/register\">here!</Link>\r\n          </p>\r\n        </form>\r\n        {isRedirecting && <Redirect to=\"/messages\" />}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\"\r\nimport Login from \"../components/Login\"\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <>\r\n      <div id=\"title\">\r\n        <div id=\"menu\">\r\n          <h1 id=\"header\">Kwitter</h1>\r\n        </div>\r\n        <Login />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { createUserRequest, loginRequest } from \"../fetchRequests\"\r\n\r\nimport { ACTIONS, useStore } from \"../store/store\"\r\n\r\nconst Register = (props) => {\r\n  const dispatch = useStore((state) => state.dispatch)\r\n  const isRedirecting = useStore((state) => state.isRedirecting)\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    displayName: \"\",\r\n    password: \"\",\r\n  })\r\n\r\n  // Handle form submission\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    // Create new user using form inputs\r\n    createUserRequest(\r\n      formData.username,\r\n      formData.password,\r\n      formData.displayName\r\n    )\r\n      .then(() => loginRequest(formData.username, formData.password))\r\n      .then((userData) => {\r\n        if (userData.message === undefined) {\r\n          return dispatch({ type: ACTIONS.LOGIN, payload: userData })\r\n        } else {\r\n          alert(userData.message)\r\n          return false\r\n        }\r\n      })\r\n      // If everything worked out well, redirect to the main page\r\n      .then((value) => {\r\n        if (value) {\r\n          return dispatch({ type: ACTIONS.SET_REDIRECTING })\r\n        }\r\n      })\r\n  }\r\n\r\n  // Handle change in form\r\n  const handleChange = (e) => {\r\n    const inputName = e.target.name\r\n    const inputValue = e.target.value\r\n    setFormData((state) => ({ ...state, [inputName]: inputValue }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form id=\"signup-form\" onSubmit={handleLogin}>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          autoFocus\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <label htmlFor=\"displayName\">Display Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={formData.displayName}\r\n          required\r\n          onChange={handleChange}\r\n        ></input>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      <p>\r\n        Already have an account? Login <Link to=\"/\">here!</Link>\r\n        {/* Redirect to main page when signed in */}\r\n        {isRedirecting && <Redirect to=\"/\" />}\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound(props) {\r\n  return (\r\n    <>\r\n      <p>Page not found for {props.location.pathname}</p>\r\n      <Link to=\"/\">Go Home</Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import Navbar from \"react-bootstrap/Navbar\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport { useStore, ACTIONS } from \"../store/store\"\r\nimport { logoutRequest } from \"../fetchRequests\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction NavView(props) {\r\n  const user = useStore((state) => state.user)\r\n  const dispatch = useStore((state) => state.dispatch)\r\n\r\n  // Handle Logout\r\n  const logout = (e) => {\r\n    logoutRequest(user.token)\r\n      .then(() => dispatch({ type: ACTIONS.LOGOUT }))\r\n      .then(dispatch({ type: ACTIONS.SET_REDIRECTING }))\r\n      .then(() => dispatch({ type: ACTIONS.SET_LIMIT, payload: { limit: 15 } }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar fixed=\"top\" />\r\n      <Navbar bg=\"dark\" variant=\"dark\" />\r\n\r\n      <button onClick={logout}>Logout</button>\r\n\r\n      <Link to={`/profile/${user.username}`}>\r\n        <button>Profile</button>\r\n      </Link>\r\n      <Link to=\"/messages\">\r\n        <button>Message Board</button>\r\n      </Link>\r\n      <Link to=\"/topten\">\r\n        <button>Top Posts</button>\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavView\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nimport NavView from \"../components/Header\"\r\nimport { useStore, ACTIONS } from \"../store/store\"\r\nimport {\r\n  setPictureRequest,\r\n  getUserRequest,\r\n  updateUserRequest,\r\n  deleteUserRequest,\r\n} from \"../fetchRequests\"\r\n\r\nconst ImgUpload = ({ onChange, src }) => (\r\n  <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\r\n    <div className=\"img-wrap img-upload\">\r\n      <img for=\"photo-upload\" src={src} />\r\n    </div>\r\n    <input id=\"photo-upload\" type=\"file\" onChange={onChange} />\r\n  </label>\r\n)\r\n\r\nconst Name = ({ onChange, value }) => (\r\n  <div className=\"field\">\r\n    <label htmlFor=\"name\">name:</label>\r\n    <input\r\n      id=\"name\"\r\n      type=\"text\"\r\n      onChange={onChange}\r\n      minLength=\"3\"\r\n      maxLength=\"20\"\r\n      value={value}\r\n      required\r\n    />\r\n  </div>\r\n)\r\n\r\nconst Status = ({ onChange, value }) => (\r\n  <div className=\"field\">\r\n    <label htmlFor=\"status\">status:</label>\r\n    <input\r\n      id=\"status\"\r\n      type=\"text\"\r\n      onChange={onChange}\r\n      maxLength=\"255\"\r\n      value={value}\r\n      required\r\n    />\r\n  </div>\r\n)\r\n\r\nconst Password = ({ onChange, value }) => (\r\n  <div className=\"field\">\r\n    <label htmlFor=\"password\">Password:</label>\r\n    <input\r\n      id=\"password\"\r\n      type=\"password\"\r\n      onChange={onChange}\r\n      minLength=\"3\"\r\n      maxLength=\"20\"\r\n      value={value}\r\n      required\r\n    />\r\n  </div>\r\n)\r\n\r\nconst Profile = ({ onSubmit, src, name, status, canEdit, username }) => (\r\n  <>\r\n    <div className=\"profilecard\">\r\n      <h3>{name}'s Profile Page</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <label className=\"custom-file-upload fas\">\r\n          <div className=\"img-wrap\">\r\n            <img\r\n              width=\"200px\"\r\n              for=\"photo-upload\"\r\n              src={src}\r\n              alt={`${username}'s Profile Picture`}\r\n            />\r\n          </div>\r\n        </label>\r\n        <div className=\"name\">{name}</div>\r\n        <div className=\"username\">@{username}</div>\r\n        <div className=\"status\">{status}</div>\r\n        {canEdit && (\r\n          <button type=\"submit\" className=\"edit\">\r\n            Edit Profile{\" \"}\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  </>\r\n)\r\n\r\nconst Edit = ({ onSubmit, changeActive, children, handleDelete }) => (\r\n  <div className=\"profilecard\">\r\n    <form onSubmit={onSubmit}>\r\n      {children}\r\n      <button type=\"submit\" className=\"save\">\r\n        Save{\" \"}\r\n      </button>\r\n      <button onClick={handleDelete}>Delete Account</button>\r\n      <button onClick={changeActive}>Back</button>\r\n    </form>\r\n  </div>\r\n)\r\n\r\nfunction ProfilePage(props) {\r\n  //This is are the states that will take in the information of the user\r\n  const [user, setUser] = useState(\"\")\r\n  const [username, setUsername] = useState(\"\")\r\n  const [userStatus, setUserStatus] = useState(\"\")\r\n  const [imageUrl, setImageUrl] = useState(\"\")\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [canEdit, setCanEdit] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    password: \"\",\r\n    displayName: \"\",\r\n    about: \"\",\r\n  })\r\n\r\n  const isRedirecting = useStore((state) => state.isRedirecting)\r\n  const currentUser = useStore((state) => state.user)\r\n  const dispatch = useStore((state) => state.dispatch)\r\n\r\n  //this is an example/place holder for now\r\n  //ideally we will run this with props.user etc from props that is passed into the component\r\n  //\r\n  useEffect(() => {\r\n    getUserRequest(props.location.pathname.slice(9)).then((userData) => {\r\n      if (userData.user.username === currentUser.username) {\r\n        setCanEdit(true)\r\n      }\r\n\r\n      setUser(userData.user.displayName)\r\n      setUsername(userData.user.username)\r\n      setImageUrl(\r\n        `https://socialapp-api.herokuapp.com${userData.user.pictureLocation}`\r\n      )\r\n      setUserStatus(userData.user.about)\r\n    })\r\n  }, [props.location.pathname])\r\n\r\n  //handles the image upload\r\n  function photoUpload(event) {\r\n    const reader = new FileReader()\r\n    const picture = event.target.files[0]\r\n    reader.onloadend = () => {\r\n      if (picture.size <= 200000) {\r\n        setImageUrl(reader.result)\r\n        setPictureRequest(currentUser.username, picture, currentUser.token)\r\n      } else {\r\n        alert(\"Image cannot be larger than 200KB\")\r\n      }\r\n    }\r\n    reader.readAsDataURL(picture)\r\n  }\r\n\r\n  //handles the edit of user's name\r\n  function editName(event) {\r\n    const name = event.target.value\r\n    setFormData((data) => {\r\n      return { ...data, displayName: name }\r\n    })\r\n  }\r\n\r\n  function editPassword(event) {\r\n    const password = event.target.value\r\n    setFormData((data) => {\r\n      return { ...data, password: password }\r\n    })\r\n  }\r\n\r\n  //handles the edit of user status\r\n  function editStatus(event) {\r\n    const status = event.target.value\r\n\r\n    setFormData((data) => {\r\n      return { ...data, about: status }\r\n    })\r\n  }\r\n\r\n  //handles the submit\r\n  function handleSubmit(event) {\r\n    event.preventDefault()\r\n\r\n    updateUserRequest(\r\n      currentUser.username,\r\n      formData.password,\r\n      formData.about,\r\n      formData.displayName,\r\n      currentUser.token\r\n    ).then((userData) => {\r\n      if (userData.statusCode === 200) {\r\n        const data = userData.user\r\n\r\n        setUser(data.displayName)\r\n        setUsername(data.username)\r\n        setUserStatus(data.about)\r\n        setImageUrl(\r\n          `https://socialapp-api.herokuapp.com${data.pictureLocation}`\r\n        )\r\n\r\n        setFormData({\r\n          password: \"\",\r\n          displayName: \"\",\r\n          about: \"\",\r\n          picture: {},\r\n        })\r\n      }\r\n    })\r\n\r\n    setIsActive((isActive) => !isActive)\r\n  }\r\n\r\n  function handleDelete(event) {\r\n    deleteUserRequest(currentUser.username, currentUser.token)\r\n      .then(dispatch({ type: ACTIONS.LOGOUT }))\r\n      .then(dispatch({ type: ACTIONS.SET_REDIRECTING }))\r\n  }\r\n\r\n  function changeIsActive() {\r\n    setIsActive((isActive) => !isActive)\r\n  }\r\n\r\n  //here is where the component's created above will be run passing in the\r\n  //states that we pull from props in useEffect funtion in this component\r\n  return (\r\n    <>\r\n      <NavView />\r\n      <div className=\"profilebody\">\r\n        {isActive ? (\r\n          <Edit\r\n            onSubmit={(event) => handleSubmit(event)}\r\n            changeActive={(event) => changeIsActive(event)}\r\n            handleDelete={(event) => handleDelete(event)}\r\n          >\r\n            <ImgUpload\r\n              onChange={(event) => photoUpload(event)}\r\n              src={imageUrl}\r\n            />\r\n            <Name\r\n              onChange={(event) => editName(event)}\r\n              value={formData.displayName}\r\n            />\r\n            <Password\r\n              onChange={(event) => editPassword(event)}\r\n              value={formData.password}\r\n            />\r\n            <Status\r\n              onChange={(event) => editStatus(event)}\r\n              value={formData.about}\r\n            />\r\n          </Edit>\r\n        ) : (\r\n          <Profile\r\n            onSubmit={(event) => changeIsActive(event)}\r\n            src={imageUrl}\r\n            name={user}\r\n            username={username}\r\n            status={userStatus}\r\n            canEdit={canEdit}\r\n          />\r\n        )}\r\n      </div>\r\n      {!isRedirecting && <Redirect to=\"/\" />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n","// import \"../assets/messageFeed.css\"\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\n\r\nimport { useStore, ACTIONS } from \"../store/store\"\r\nimport {\r\n  addLikeRequest,\r\n  removeLikeRequest,\r\n  getMessageList,\r\n} from \"../fetchRequests\"\r\n\r\nconst LikeButton = (props) => {\r\n  const [buttonName, setButtonName] = useState(\"Like\")\r\n  const [isFirstRender, setIsFirstRender] = useState(true)\r\n\r\n  const messages = useStore((state) => state.messages)\r\n  const user = useStore((state) => state.user)\r\n  const dispatch = useStore((state) => state.dispatch)\r\n\r\n  // Set button name when first loading\r\n  useEffect(() => {\r\n    const likeObj = props.likes.filter(\r\n      (like) => like.username === user.username\r\n    )[0]\r\n\r\n    if (likeObj && isFirstRender) {\r\n      setButtonName(\"Remove Like\")\r\n      setIsFirstRender(false)\r\n    }\r\n  })\r\n\r\n  const handleClick = () => {\r\n    // When Liking a post\r\n    if (buttonName === \"Like\") {\r\n      const messageId = props.id\r\n      addLikeRequest(messageId, user.token).then(setButtonName(\"Remove Like\"))\r\n      // When removing a like from a post\r\n    } else {\r\n      const messageObj = messages.filter(\r\n        (message) => message.id === props.id\r\n      )[0]\r\n\r\n      const likeId = messageObj.likes.filter(\r\n        (like) => like.username === user.username\r\n      )[0].id\r\n\r\n      removeLikeRequest(likeId, user.token).then(setButtonName(\"Like\"))\r\n    }\r\n\r\n    // Get updated messages\r\n    setTimeout(() => {\r\n      getMessageList().then((res) => {\r\n        dispatch({\r\n          type: ACTIONS.SET_MESSAGES,\r\n          payload: { messages: res.messages },\r\n        })\r\n      })\r\n    }, 700)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card.Text>Number of Likes: {props.likes.length}</Card.Text>\r\n      <Button onClick={handleClick}>{buttonName}</Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LikeButton\r\n","import \"../assets/messageFeed.css\"\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { useStore, ACTIONS } from \"../store/store\"\r\nimport LikeButton from \"./LikeButton\"\r\nimport {\r\n  getMessageList,\r\n  getPictureRequest,\r\n  deleteMessageRequest,\r\n} from \"../fetchRequests\"\r\n\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nconst MessageItem = (props) => {\r\n  const user = useStore((state) => state.user)\r\n  const dispatch = useStore((state) => state.dispatch)\r\n  const limit = useStore((state) => state.limit)\r\n\r\n  const [profilePicture, setProfilePicture] = useState()\r\n  const [isUserMessage, setIsUserMessage] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getPictureRequest(props.username).then((picture) => {\r\n      if (\r\n        picture.type === \"image/jpeg\" ||\r\n        picture.type === \"image/png\" ||\r\n        picture.type === \"image/gif\"\r\n      ) {\r\n        const pictureURL = URL.createObjectURL(picture)\r\n        picture.src = pictureURL\r\n        return setProfilePicture(picture)\r\n      }\r\n    })\r\n\r\n    if (props.username === user.username) {\r\n      setIsUserMessage(true)\r\n    }\r\n  }, [])\r\n\r\n  const handleDelete = () => {\r\n    deleteMessageRequest(props.id, user.token)\r\n\r\n    setTimeout(() => {\r\n      getMessageList(limit, 0).then((res) => {\r\n        dispatch({\r\n          type: ACTIONS.SET_MESSAGES,\r\n          payload: { messages: res.messages },\r\n        })\r\n      })\r\n    }, 500)\r\n  }\r\n\r\n  return (\r\n    <div id=\"MessageFeed\">\r\n      <div id={`message-${props.id}`}>\r\n        <Card style={{ width: \"90%\", height: \"auto\" }}>\r\n          <Card.Img variant=\"top\" src={profilePicture && profilePicture.src} />\r\n          <Card.Body>\r\n            <Card.Title>{props.username}</Card.Title>\r\n            <Card.Text>\r\n              <textarea readOnly type=\"text\" value={props.value}></textarea>\r\n              {isUserMessage && (\r\n                <Button onClick={handleDelete}>Delete Message</Button>\r\n              )}\r\n              <LikeButton likes={props.likes} id={props.id} />\r\n            </Card.Text>\r\n            <Link to={`/profile/${props.username}`}>\r\n              <Button>{props.username}'s Profile</Button>\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageItem\r\n","import { useEffect } from \"react\"\r\nimport MessageItem from \"../components/MessageItem\"\r\nimport { useStore, ACTIONS } from \"../store/store\"\r\nimport { getMessageList } from \"../fetchRequests\"\r\n\r\nconst MessageList = () => {\r\n  const messages = useStore((state) => state.messages)\r\n  const dispatch = useStore((state) => state.dispatch)\r\n\r\n  const sortedMessages = messages.slice(0, 15)\r\n\r\n  useEffect(() => {\r\n    getMessageList().then((res) =>\r\n      dispatch({\r\n        type: ACTIONS.SET_MESSAGES,\r\n        payload: { messages: res.messages },\r\n      })\r\n    )\r\n  }, [])\r\n\r\n  return (\r\n    <div id=\"messages\">\r\n      <ul>\r\n        {messages &&\r\n          sortedMessages.map((message) => (\r\n            <MessageItem\r\n              value={message.text}\r\n              username={message.username}\r\n              likes={message.likes}\r\n              id={message.id}\r\n              key={message.id}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageList\r\n","import { useEffect } from \"react\"\r\n\r\nimport MessageItem from \"../components/MessageItem\"\r\nimport { useStore, ACTIONS } from \"../store/store\"\r\nimport { getMessageList } from \"../fetchRequests\"\r\n\r\nconst TopTenList = () => {\r\n  const messages = useStore((state) => state.messages)\r\n  const dispatch = useStore((state) => state.dispatch)\r\n\r\n  const sortedMessages = messages\r\n    .sort((a, b) => {\r\n      if (a.likes.length > b.likes.length) return -1\r\n      if (a.likes.length < b.likes.length) return 1\r\n      return 0\r\n    })\r\n    .slice(0, 10)\r\n\r\n  useEffect(() => {\r\n    getMessageList().then((res) =>\r\n      dispatch({\r\n        type: ACTIONS.SET_MESSAGES,\r\n        payload: { messages: res.messages },\r\n      })\r\n    )\r\n  }, [])\r\n\r\n  return (\r\n    <div id=\"messages\">\r\n      <ul>\r\n        {messages &&\r\n          sortedMessages.map((message) => (\r\n            <MessageItem\r\n              value={message.text}\r\n              username={message.username}\r\n              likes={message.likes}\r\n              id={message.id}\r\n              key={message.id}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopTenList\r\n","import { useState } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nimport { useStore, ACTIONS } from \"../store/store\"\r\nimport { getMessageList, createMessageRequest } from \"../fetchRequests\"\r\nimport NavView from \"../components/Header\"\r\nimport MessageList from \"../components/MessageList\"\r\nimport TopTenList from \"../components/TopTenList\"\r\n\r\nconst Messages = (props) => {\r\n  // Get Global state\r\n  const messages = useStore((state) => state.messages)\r\n  const user = useStore((state) => state.user)\r\n  const limit = useStore((state) => state.limit)\r\n  const isRedirecting = useStore((state) => state.isRedirecting)\r\n  const dispatch = useStore((state) => state.dispatch)\r\n\r\n  // Declare local state\r\n  const [newMessage, setNewMessage] = useState(\"\")\r\n\r\n  const handleChange = (event) => {\r\n    setNewMessage(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    createMessageRequest(user.token, newMessage)\r\n      .then(setNewMessage(\"\"))\r\n      .then(\r\n        setTimeout(() => {\r\n          getMessageList(limit, 0).then((res) => {\r\n            dispatch({\r\n              type: ACTIONS.SET_MESSAGES,\r\n              payload: { messages: res.messages },\r\n            })\r\n          })\r\n        }, 500)\r\n      )\r\n  }\r\n\r\n  const list = props.match.path === \"/topten\" ? <TopTenList /> : <MessageList />\r\n\r\n  return (\r\n    <>\r\n      <NavView />\r\n      <form id=\"message-form\" onSubmit={handleSubmit}>\r\n        <textarea\r\n          type=\"text\"\r\n          required\r\n          value={newMessage}\r\n          placeholder=\"What do you want to say?\"\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        <button type=\"submit\">Post</button>\r\n      </form>\r\n      {messages && list}\r\n      {!isRedirecting && <Redirect to=\"/\" />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Messages\r\n","import { Switch, Route } from \"react-router-dom\"\r\nimport Home from \"./views/Home\"\r\nimport Register from \"./views/Register\"\r\nimport NotFound from \"./views/NotFound\"\r\nimport ProfilePage from \"./views/Profile\"\r\nimport Messages from \"./views/Messages\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/profile/:username\" component={ProfilePage} />\r\n        <Route path=\"/messages\" component={Messages} />\r\n        <Route path=\"/topten\" component={Messages} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./assets/index.css\"\r\nimport App from \"./App\"\r\n\r\nimport { BrowserRouter } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/kwitter-zaska-afk\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}