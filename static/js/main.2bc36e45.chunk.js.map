{"version":3,"sources":["fetchRequests.js","store/store.js","components/Login.js","views/Home.js","views/Register.js","views/NotFound.js","components/Header.js","views/Profile.js","components/LikeButton.js","components/MessageItem.js","components/MessageList.js","components/TopTenList.js","views/Messages.js","App.js","index.js"],"names":["baseURL","loginRequest","username","password","fetch","method","headers","body","JSON","stringify","then","res","json","getMessageList","limit","offset","ACTIONS","useStore","create","devtools","redux","state","action","type","user","payload","token","messages","isRedirecting","console","log","likes","like","Login","dispatch","useState","formData","setFormData","useEffect","window","addEventListener","handleMessage","removeEventListener","e","undefined","data","handleChange","inputName","target","name","inputValue","value","id","onSubmit","preventDefault","userData","message","alert","htmlFor","autoFocus","required","onChange","onClick","open","to","Home","props","Register","displayName","NotFound","location","pathname","NavView","Navbar","fixed","bg","variant","Authorization","ImgUpload","src","className","for","Name","minLength","maxLength","Status","Password","Profile","status","canEdit","width","alt","Edit","changeActive","children","handleDelete","ProfilePage","setUser","setUsername","userStatus","setUserStatus","imageUrl","setImageUrl","isActive","setIsActive","setCanEdit","about","currentUser","photoUpload","event","reader","FileReader","picture","files","onloadend","size","result","FormData","append","setPictureRequest","readAsDataURL","handleSubmit","updateUserRequest","statusCode","pictureLocation","deleteUserRequest","changeIsActive","getUserRequest","slice","editName","editPassword","editStatus","LikeButton","buttonName","setButtonName","isFirstRender","setIsFirstRender","filter","Card","Text","length","Button","messageId","addLikeRequest","likeId","removeLikeRequest","setTimeout","MessageItem","profilePicture","setProfilePicture","isUserMessage","setIsUserMessage","blob","pictureURL","URL","createObjectURL","style","height","Img","Body","Title","readOnly","MessageList","map","text","TopTenList","sortedMessages","sort","a","b","Messages","newMessage","setNewMessage","list","match","path","placeholder","App","exact","component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2bc36e45.chunk.js","sourcesContent":["const baseURL = \"https://socialapp-api.herokuapp.com/\"\n\nexport const loginRequest = (username, password) => {\n  return fetch(baseURL + \"auth/login\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json())\n}\n\nexport const logoutRequest = (token) => {\n  return fetch(baseURL + \"auth/logout\", {\n    headers: { Authorization: \"Bearer \" + token },\n  }).then((res) => res.json())\n}\n\nexport const createUserRequest = (username, password, displayName) => {\n  return fetch(baseURL + \"users\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username,\n      displayName,\n      password,\n    }),\n  }).then((res) => res.json())\n}\n\n//to search for another user's profile information\nexport const getUserRequest = (username) => {\n  return fetch(baseURL + `users/${username}`).then((res) => res.json())\n}\n\n//settings component to update user's information\nexport const updateUserRequest = (\n  username,\n  password,\n  about,\n  displayName,\n  token\n) => {\n  return fetch(baseURL + `users/${username}`, {\n    method: \"PATCH\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password,\n      about,\n      displayName,\n    }),\n  }).then((res) => res.json())\n}\n\n//settings component\nexport const deleteUserRequest = (username, token) => {\n  return fetch(baseURL + `users/${username}`, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Bearer \" + token },\n  }).then((res) => res.json())\n}\n\n//looking at another user's profile and in message component\nexport const getPictureRequest = (username) => {\n  return fetch(baseURL + `users/${username}/picture`).then((res) => res.blob())\n}\n\nexport const setPictureRequest = (username, picture, token) => {\n  const formData = new FormData()\n  formData.append(\"picture\", picture)\n\n  return fetch(baseURL + `users/${username}/picture`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n    },\n    body: formData,\n  })\n}\n\nexport const createMessageRequest = (token, text) => {\n  return fetch(baseURL + \"messages\", {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      text,\n    }),\n  }).then((res) => res.json())\n}\n\n//looking at another user's profile\nexport const getUserMessageList = (limit, offset, username) => {\n  return fetch(\n    `${baseURL}messages?limit=${limit}&offset=${offset}&username=${username}`\n  ).then((res) => res.json())\n}\n\nexport const getMessageList = (limit, offset) => {\n  return fetch(\n    `${baseURL}messages?limit=${limit}&offset=${offset}`\n  ).then((res) => res.json())\n}\n\n//can be in settings or for messages you have posted\nexport const deleteMessageRequest = (messageId, token) => {\n  return fetch(`${baseURL}messages/${messageId}`, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Bearer \" + token },\n  }).then((res) => res.json())\n}\n\nexport const addLikeRequest = (messageId, token) => {\n  return fetch(baseURL + \"likes\", {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      messageId,\n    }),\n  })\n}\n\nexport const removeLikeRequest = (likeId, token) => {\n  return fetch(`${baseURL}likes/${likeId}`, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Bearer \" + token },\n  }).then((res) => res.json())\n}\n","import create from \"zustand\"\nimport { devtools, redux } from \"zustand/middleware\"\n\n// define the store's initial state\nconst initialState = {\n  user: { token: \"\" },\n  messages: [],\n  limit: 15,\n  isRedirecting: false,\n}\n\n// set action types\nexport const ACTIONS = {\n  LOGOUT: \"LOGOUT\",\n  LOGIN: \"LOGIN\",\n  SET_MESSAGES: \"SET_MESSAGES\",\n  SET_REDIRECTING: \"SET_REDIRECTING\",\n  SET_LIMIT: \"SET_LIMIT\",\n  ADD_LIKE: \"ADD_LIKE\",\n  REMOVE_LIKE: \"REMOVE_LIKE\",\n}\n\n// define reducer function\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.LOGIN:\n      return {\n        ...state,\n        user: {\n          username: action.payload.username,\n          token: action.payload.token,\n        },\n      }\n    case ACTIONS.LOGOUT:\n      return { ...state, user: {} }\n    case ACTIONS.SET_MESSAGES:\n      return {\n        ...state,\n        messages: action.payload.messages,\n      }\n    case ACTIONS.SET_REDIRECTING:\n      return { ...state, isRedirecting: !state.isRedirecting }\n    case ACTIONS.SET_LIMIT:\n      return { ...state, limit: action.payload.limit }\n    case ACTIONS.ADD_LIKE:\n      console.log(action.payload)\n      return { ...state, likes: [...state.likes, action.payload.like] }\n    case ACTIONS.REMOVE_LIKE:\n      return { ...state, likes: action.payload.likes }\n    default:\n      return state\n  }\n}\n\n// create useStore hook\nexport const useStore = create(devtools(redux(reducer, initialState)))\n","import React, { useState, useEffect } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport { loginRequest } from \"../fetchRequests\"\n\nimport { ACTIONS, useStore } from \"../store/store\"\nimport \"../assets/homepage.css\"\n\nfunction Login() {\n  const dispatch = useStore((state) => state.dispatch)\n  const isRedirecting = useStore((state) => state.isRedirecting)\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  })\n\n  useEffect(() => {\n    window.addEventListener(\"message\", handleMessage)\n    return () => {\n      window.removeEventListener(\"message\", handleMessage)\n    }\n  }, [])\n\n  const handleMessage = (e) => {\n    if (e.data.username !== undefined) {\n      dispatch({ type: ACTIONS.LOGIN, payload: e.data })\n      dispatch({ type: ACTIONS.SET_REDIRECTING })\n    }\n  }\n\n  const handleLogin = (e) => {\n    e.preventDefault()\n    loginRequest(formData.username, formData.password)\n      // If the request turned out ok\n      .then((userData) => {\n        if (userData.message === undefined) {\n          return dispatch({ type: ACTIONS.LOGIN, payload: userData })\n        } else {\n          alert(userData.message)\n          return false\n        }\n      })\n      .then((value) => {\n        if (value) {\n          dispatch({ type: ACTIONS.SET_REDIRECTING })\n        }\n      })\n  }\n\n  const handleChange = (e) => {\n    const inputName = e.target.name\n    const inputValue = e.target.value\n    setFormData((state) => ({ ...state, [inputName]: inputValue }))\n  }\n\n  const handleClick = (e) => {\n    window.open(\"https://socialapp-api.herokuapp.com/auth/google/login\")\n  }\n\n  return (\n    <>\n      <div id=\"login\">\n        <form id=\"login-form\" onSubmit={handleLogin}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={formData.username}\n            autoFocus\n            required\n            onChange={handleChange}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            required\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Login</button>\n          <button onClick={handleClick}>Login in with Google</button>\n\n          <p>\n            Don't have an account? Sign up <Link to=\"/register\">here!</Link>\n          </p>\n        </form>\n        {isRedirecting && <Redirect to=\"/messages\" />}\n      </div>\n    </>\n  )\n}\n\nexport default Login\n","import React from \"react\"\nimport Login from \"../components/Login\"\n\nfunction Home(props) {\n  return (\n    <>\n      <div id=\"title\">\n        <div id=\"menu\">\n          <h1 id=\"header\">Kwitter</h1>\n        </div>\n        <Login />\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import React, { useState } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport { createUserRequest, loginRequest } from \"../fetchRequests\"\n\nimport { ACTIONS, useStore } from \"../store/store\"\n\nconst Register = (props) => {\n  const dispatch = useStore((state) => state.dispatch)\n  const isRedirecting = useStore((state) => state.isRedirecting)\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    displayName: \"\",\n    password: \"\",\n  })\n\n  // Handle form submission\n  const handleLogin = (e) => {\n    e.preventDefault()\n    // Create new user using form inputs\n    createUserRequest(\n      formData.username,\n      formData.password,\n      formData.displayName\n    )\n      .then(() => loginRequest(formData.username, formData.password))\n      .then((userData) => {\n        if (userData.message === undefined) {\n          return dispatch({ type: ACTIONS.LOGIN, payload: userData })\n        } else {\n          alert(userData.message)\n          return false\n        }\n      })\n      // If everything worked out well, redirect to the main page\n      .then((value) => {\n        if (value) {\n          return dispatch({ type: ACTIONS.SET_REDIRECTING })\n        }\n      })\n  }\n\n  // Handle change in form\n  const handleChange = (e) => {\n    const inputName = e.target.name\n    const inputValue = e.target.value\n    setFormData((state) => ({ ...state, [inputName]: inputValue }))\n  }\n\n  return (\n    <>\n      <form id=\"signup-form\" onSubmit={handleLogin}>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={formData.username}\n          autoFocus\n          required\n          onChange={handleChange}\n        />\n        <label htmlFor=\"displayName\">Display Name</label>\n        <input\n          type=\"text\"\n          name=\"displayName\"\n          value={formData.displayName}\n          required\n          onChange={handleChange}\n        ></input>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Sign Up</button>\n      </form>\n      <p>\n        Already have an account? Login <Link to=\"/\">here!</Link>\n        {/* Redirect to main page when signed in */}\n        {isRedirecting && <Redirect to=\"/\" />}\n      </p>\n    </>\n  )\n}\n\nexport default Register\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFound(props) {\n  return (\n    <>\n      <p>Page not found for {props.location.pathname}</p>\n      <Link to=\"/\">Go Home</Link>\n    </>\n  );\n}\n\nexport default NotFound;\n","import Navbar from \"react-bootstrap/Navbar\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport { useStore, ACTIONS } from \"../store/store\"\nimport { logoutRequest } from \"../fetchRequests\"\nimport { Link } from \"react-router-dom\"\n\nfunction NavView(props) {\n  const user = useStore((state) => state.user)\n  const dispatch = useStore((state) => state.dispatch)\n\n  // Handle Logout\n  const logout = (e) => {\n    logoutRequest(user.token)\n      .then(() => dispatch({ type: ACTIONS.LOGOUT }))\n      .then(dispatch({ type: ACTIONS.SET_REDIRECTING }))\n      .then(() => dispatch({ type: ACTIONS.SET_LIMIT, payload: { limit: 15 } }))\n  }\n\n  return (\n    <>\n      <Navbar fixed=\"top\" />\n      <Navbar bg=\"dark\" variant=\"dark\" />\n\n      <button onClick={logout}>Logout</button>\n\n      <Link to={`/profile/${user.username}`}>\n        <button>Profile</button>\n      </Link>\n      <Link to=\"/messages\">\n        <button>Message Board</button>\n      </Link>\n      <Link to=\"/topten\">\n        <button>Top Posts</button>\n      </Link>\n    </>\n  )\n}\n\nexport default NavView\n","import React, { useState, useEffect } from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\nimport NavView from \"../components/Header\"\nimport { useStore, ACTIONS } from \"../store/store\"\nimport {\n  setPictureRequest,\n  getUserRequest,\n  updateUserRequest,\n  deleteUserRequest,\n} from \"../fetchRequests\"\n\nconst ImgUpload = ({ onChange, src }) => (\n  <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\n    <div className=\"img-wrap img-upload\">\n      <img for=\"photo-upload\" src={src} />\n    </div>\n    <input id=\"photo-upload\" type=\"file\" onChange={onChange} />\n  </label>\n)\n\nconst Name = ({ onChange, value }) => (\n  <div className=\"field\">\n    <label htmlFor=\"name\">name:</label>\n    <input\n      id=\"name\"\n      type=\"text\"\n      onChange={onChange}\n      minLength=\"3\"\n      maxLength=\"20\"\n      value={value}\n      required\n    />\n  </div>\n)\n\nconst Status = ({ onChange, value }) => (\n  <div className=\"field\">\n    <label htmlFor=\"status\">status:</label>\n    <input\n      id=\"status\"\n      type=\"text\"\n      onChange={onChange}\n      maxLength=\"255\"\n      value={value}\n      required\n    />\n  </div>\n)\n\nconst Password = ({ onChange, value }) => (\n  <div className=\"field\">\n    <label htmlFor=\"password\">Password:</label>\n    <input\n      id=\"password\"\n      type=\"password\"\n      onChange={onChange}\n      minLength=\"3\"\n      maxLength=\"20\"\n      value={value}\n      required\n    />\n  </div>\n)\n\nconst Profile = ({ onSubmit, src, name, status, canEdit, username }) => (\n  <>\n    <div className=\"profilecard\">\n      <h3>{name}'s Profile Page</h3>\n      <form onSubmit={onSubmit}>\n        <label className=\"custom-file-upload fas\">\n          <div className=\"img-wrap\">\n            <img\n              width=\"200px\"\n              for=\"photo-upload\"\n              src={src}\n              alt={`${username}'s Profile Picture`}\n            />\n          </div>\n        </label>\n        <div className=\"name\">{name}</div>\n        <div className=\"username\">@{username}</div>\n        <div className=\"status\">{status}</div>\n        {canEdit && (\n          <button type=\"submit\" className=\"edit\">\n            Edit Profile{\" \"}\n          </button>\n        )}\n      </form>\n    </div>\n  </>\n)\n\nconst Edit = ({ onSubmit, changeActive, children, handleDelete }) => (\n  <div className=\"profilecard\">\n    <form onSubmit={onSubmit}>\n      {children}\n      <button type=\"submit\" className=\"save\">\n        Save{\" \"}\n      </button>\n      <button onClick={handleDelete}>Delete Account</button>\n      <button onClick={changeActive}>Back</button>\n    </form>\n  </div>\n)\n\nfunction ProfilePage(props) {\n  //This is are the states that will take in the information of the user\n  const [user, setUser] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [userStatus, setUserStatus] = useState(\"\")\n  const [imageUrl, setImageUrl] = useState(\"\")\n  const [isActive, setIsActive] = useState(false)\n  const [canEdit, setCanEdit] = useState(false)\n  const [formData, setFormData] = useState({\n    password: \"\",\n    displayName: \"\",\n    about: \"\",\n  })\n\n  const isRedirecting = useStore((state) => state.isRedirecting)\n  const currentUser = useStore((state) => state.user)\n  const dispatch = useStore((state) => state.dispatch)\n\n  //this is an example/place holder for now\n  //ideally we will run this with props.user etc from props that is passed into the component\n  //\n  useEffect(() => {\n    getUserRequest(props.location.pathname.slice(9)).then((userData) => {\n      if (userData.user.username === currentUser.username) {\n        setCanEdit(true)\n      }\n\n      setUser(userData.user.displayName)\n      setUsername(userData.user.username)\n      setImageUrl(\n        `https://socialapp-api.herokuapp.com${userData.user.pictureLocation}`\n      )\n      setUserStatus(userData.user.about)\n    })\n  }, [props.location.pathname])\n\n  //handles the image upload\n  function photoUpload(event) {\n    const reader = new FileReader()\n    const picture = event.target.files[0]\n    reader.onloadend = () => {\n      if (picture.size <= 200000) {\n        setImageUrl(reader.result)\n        setPictureRequest(currentUser.username, picture, currentUser.token)\n      } else {\n        alert(\"Image cannot be larger than 200KB\")\n      }\n    }\n    reader.readAsDataURL(picture)\n  }\n\n  //handles the edit of user's name\n  function editName(event) {\n    const name = event.target.value\n    setFormData((data) => {\n      return { ...data, displayName: name }\n    })\n  }\n\n  function editPassword(event) {\n    const password = event.target.value\n    setFormData((data) => {\n      return { ...data, password: password }\n    })\n  }\n\n  //handles the edit of user status\n  function editStatus(event) {\n    const status = event.target.value\n\n    setFormData((data) => {\n      return { ...data, about: status }\n    })\n  }\n\n  //handles the submit\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    updateUserRequest(\n      currentUser.username,\n      formData.password,\n      formData.about,\n      formData.displayName,\n      currentUser.token\n    ).then((userData) => {\n      if (userData.statusCode === 200) {\n        const data = userData.user\n\n        setUser(data.displayName)\n        setUsername(data.username)\n        setUserStatus(data.about)\n        setImageUrl(\n          `https://socialapp-api.herokuapp.com${data.pictureLocation}`\n        )\n\n        setFormData({\n          password: \"\",\n          displayName: \"\",\n          about: \"\",\n          picture: {},\n        })\n      }\n    })\n\n    setIsActive((isActive) => !isActive)\n  }\n\n  function handleDelete(event) {\n    deleteUserRequest(currentUser.username, currentUser.token)\n      .then(dispatch({ type: ACTIONS.LOGOUT }))\n      .then(dispatch({ type: ACTIONS.SET_REDIRECTING }))\n  }\n\n  function changeIsActive() {\n    setIsActive((isActive) => !isActive)\n  }\n\n  //here is where the component's created above will be run passing in the\n  //states that we pull from props in useEffect funtion in this component\n  return (\n    <>\n      <NavView />\n      <div className=\"profilebody\">\n        {isActive ? (\n          <Edit\n            onSubmit={(event) => handleSubmit(event)}\n            changeActive={(event) => changeIsActive(event)}\n            handleDelete={(event) => handleDelete(event)}\n          >\n            <ImgUpload\n              onChange={(event) => photoUpload(event)}\n              src={imageUrl}\n            />\n            <Name\n              onChange={(event) => editName(event)}\n              value={formData.displayName}\n            />\n            <Password\n              onChange={(event) => editPassword(event)}\n              value={formData.password}\n            />\n            <Status\n              onChange={(event) => editStatus(event)}\n              value={formData.about}\n            />\n          </Edit>\n        ) : (\n          <Profile\n            onSubmit={(event) => changeIsActive(event)}\n            src={imageUrl}\n            name={user}\n            username={username}\n            status={userStatus}\n            canEdit={canEdit}\n          />\n        )}\n      </div>\n      {!isRedirecting && <Redirect to=\"/\" />}\n    </>\n  )\n}\n\nexport default ProfilePage\n","// import \"../assets/messageFeed.css\"\nimport Card from \"react-bootstrap/Card\"\nimport Button from \"react-bootstrap/Button\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport { useState, useEffect } from \"react\"\n\nimport { useStore, ACTIONS } from \"../store/store\"\nimport {\n  addLikeRequest,\n  removeLikeRequest,\n  getMessageList,\n} from \"../fetchRequests\"\n\nconst LikeButton = (props) => {\n  const [buttonName, setButtonName] = useState(\"Like\")\n  const [isFirstRender, setIsFirstRender] = useState(true)\n\n  const messages = useStore((state) => state.messages)\n  const user = useStore((state) => state.user)\n  const limit = useStore((state) => state.limit)\n  const dispatch = useStore((state) => state.dispatch)\n\n  // Set button name when first loading\n  useEffect(() => {\n    const likeObj = props.likes.filter(\n      (like) => like.username === user.username\n    )[0]\n\n    if (likeObj && isFirstRender) {\n      setButtonName(\"Remove Like\")\n      setIsFirstRender(false)\n    }\n  })\n\n  const handleClick = () => {\n    // When Liking a post\n    if (buttonName === \"Like\") {\n      const messageId = props.id\n      addLikeRequest(messageId, user.token).then(setButtonName(\"Remove Like\"))\n      // When removing a like from a post\n    } else {\n      const messageObj = messages.filter(\n        (message) => message.id === props.id\n      )[0]\n\n      const likeId = messageObj.likes.filter(\n        (like) => like.username === user.username\n      )[0].id\n\n      removeLikeRequest(likeId, user.token).then(setButtonName(\"Like\"))\n    }\n\n    // Get updated messages\n    setTimeout(() => {\n      getMessageList(limit, 0).then((res) => {\n        dispatch({\n          type: ACTIONS.SET_MESSAGES,\n          payload: { messages: res.messages },\n        })\n      })\n    }, 700)\n  }\n\n  return (\n    <>\n      <Card.Text>Number of Likes: {props.likes.length}</Card.Text>\n      <Button onClick={handleClick}>{buttonName}</Button>\n    </>\n  )\n}\n\nexport default LikeButton\n","import \"../assets/messageFeed.css\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { useStore, ACTIONS } from \"../store/store\"\nimport LikeButton from \"./LikeButton\"\nimport {\n  getMessageList,\n  getPictureRequest,\n  deleteMessageRequest,\n} from \"../fetchRequests\"\n\nimport Card from \"react-bootstrap/Card\"\nimport Button from \"react-bootstrap/Button\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nconst MessageItem = (props) => {\n  const user = useStore((state) => state.user)\n  const dispatch = useStore((state) => state.dispatch)\n  const limit = useStore((state) => state.limit)\n\n  const [profilePicture, setProfilePicture] = useState()\n  const [isUserMessage, setIsUserMessage] = useState(false)\n\n  useEffect(() => {\n    getPictureRequest(props.username).then((picture) => {\n      if (\n        picture.type === \"image/jpeg\" ||\n        picture.type === \"image/png\" ||\n        picture.type === \"image/gif\"\n      ) {\n        const pictureURL = URL.createObjectURL(picture)\n        picture.src = pictureURL\n        return setProfilePicture(picture)\n      }\n    })\n\n    if (props.username === user.username) {\n      setIsUserMessage(true)\n    }\n  }, [])\n\n  const handleDelete = () => {\n    deleteMessageRequest(props.id, user.token)\n\n    setTimeout(() => {\n      getMessageList(limit, 0).then((res) => {\n        dispatch({\n          type: ACTIONS.SET_MESSAGES,\n          payload: { messages: res.messages },\n        })\n      })\n    }, 500)\n  }\n\n  return (\n    <div id=\"MessageFeed\">\n      <div id={`message-${props.id}`}>\n        <Card style={{ width: \"90%\", height: \"auto\" }}>\n          <Card.Img variant=\"top\" src={profilePicture && profilePicture.src} />\n          <Card.Body>\n            <Card.Title>{props.username}</Card.Title>\n            <Card.Text>\n              <textarea readOnly type=\"text\" value={props.value}></textarea>\n              {isUserMessage && (\n                <Button onClick={handleDelete}>Delete Message</Button>\n              )}\n              <LikeButton likes={props.likes} id={props.id} />\n            </Card.Text>\n            <Link to={`/profile/${props.username}`}>\n              <Button>{props.username}'s Profile</Button>\n            </Link>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default MessageItem\n","import { useEffect } from \"react\"\nimport MessageItem from \"../components/MessageItem\"\nimport { useStore, ACTIONS } from \"../store/store\"\nimport { getMessageList } from \"../fetchRequests\"\n\nconst MessageList = () => {\n  const messages = useStore((state) => state.messages)\n  const limit = useStore((state) => state.limit)\n  const dispatch = useStore((state) => state.dispatch)\n\n  useEffect(() => {\n    dispatch({ type: ACTIONS.SET_LIMIT, payload: { limit: 15 } })\n\n    getMessageList(limit, 0).then((res) =>\n      dispatch({\n        type: ACTIONS.SET_MESSAGES,\n        payload: { messages: res.messages },\n      })\n    )\n  }, [])\n\n  return (\n    <div id=\"messages\">\n      <ul>\n        {messages &&\n          messages.map((message) => (\n            <MessageItem\n              value={message.text}\n              username={message.username}\n              likes={message.likes}\n              id={message.id}\n              key={message.id}\n            />\n          ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default MessageList\n","import { useEffect } from \"react\"\n\nimport MessageItem from \"../components/MessageItem\"\nimport { useStore, ACTIONS } from \"../store/store\"\n\nconst TopTenList = () => {\n  const messages = useStore((state) => state.messages)\n  const dispatch = useStore((state) => state.dispatch)\n\n  const sortedMessages = messages\n    .sort((a, b) => {\n      if (a.likes.length > b.likes.length) return -1\n      if (a.likes.length < b.likes.length) return 1\n      return 0\n    })\n    .slice(0, 10)\n\n  useEffect(() => {\n    dispatch({ type: ACTIONS.SET_LIMIT, payload: { limit: 100 } })\n  }, [])\n\n  return (\n    <div id=\"messages\">\n      <ul>\n        {messages &&\n          sortedMessages.map((message) => (\n            <MessageItem\n              value={message.text}\n              username={message.username}\n              likes={message.likes}\n              id={message.id}\n              key={message.id}\n            />\n          ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default TopTenList\n","import { useState } from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\nimport { useStore, ACTIONS } from \"../store/store\"\nimport { getMessageList, createMessageRequest } from \"../fetchRequests\"\nimport NavView from \"../components/Header\"\nimport MessageList from \"../components/MessageList\"\nimport TopTenList from \"../components/TopTenList\"\n\nconst Messages = (props) => {\n  // Get Global state\n  const messages = useStore((state) => state.messages)\n  const user = useStore((state) => state.user)\n  const limit = useStore((state) => state.limit)\n  const isRedirecting = useStore((state) => state.isRedirecting)\n  const dispatch = useStore((state) => state.dispatch)\n\n  // Declare local state\n  const [newMessage, setNewMessage] = useState(\"\")\n\n  const handleChange = (event) => {\n    setNewMessage(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    createMessageRequest(user.token, newMessage)\n      .then(setNewMessage(\"\"))\n      .then(\n        getMessageList(limit, 0).then((res) =>\n          dispatch({\n            type: ACTIONS.SET_MESSAGES,\n            payload: { messages: res.messages },\n          })\n        )\n      )\n  }\n\n  const list = props.match.path === \"/topten\" ? <TopTenList /> : <MessageList />\n\n  return (\n    <>\n      <NavView />\n      <form id=\"message-form\" onSubmit={handleSubmit}>\n        <textarea\n          type=\"text\"\n          required\n          value={newMessage}\n          placeholder=\"What do you want to say?\"\n          onChange={handleChange}\n        ></textarea>\n        <button type=\"submit\">Post</button>\n      </form>\n      {messages && list}\n      {!isRedirecting && <Redirect to=\"/\" />}\n    </>\n  )\n}\n\nexport default Messages\n","import { Switch, Route } from \"react-router-dom\"\nimport Home from \"./views/Home\"\nimport Register from \"./views/Register\"\nimport NotFound from \"./views/NotFound\"\nimport ProfilePage from \"./views/Profile\"\nimport Messages from \"./views/Messages\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/profile/:username\" component={ProfilePage} />\n        <Route path=\"/messages\" component={Messages} />\n        <Route path=\"/topten\" component={Messages} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./assets/index.css\"\nimport App from \"./App\"\n\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/kwitter-zaska-afk\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}